name: Version Update and Release
on:
  push:
    branches:
      - main
jobs:
  version_update:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Generate the version tags as a dry run so the tags are not created
      # until later
      - name: Get version tag and changelog to write
        uses: mathieudutour/github-tag-action@v6.0
        id: tag_version
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          dry_run: true
      
      - name: Update VERSION.txt
        run: |
          echo "Writing new version (${{ steps.tag_version.outputs.new_version }}) to VERSION.txt..."
          echo "${{ steps.tag_version.outputs.new_version }}" > VERSION.txt

      # Update changelog file by prepending newest changelog    
      - name: Update changelog.md
        run: |
          echo "${{ steps.tag_version.outputs.changelog }}" | cat - changelog.md > changelog_new.md
          mv changelog_new.md changelog.md
      
      # Commit the new changes to the version and changelog
      - name: Commit and push version changes in files 
        uses: actions-x/commit@v2
        with:
          branch: main
          message: "ci: Updated files for ${{ steps.tag_version.outputs.new_tag }}"
      
  release:
    needs: version_update
    runs-on: ubuntu-latest
    permissions: 
      contents: write
    steps:
      # Try to check out the files just committed
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: main

      - name: Debug
        run: |
          echo "Head SHA: `git rev-parse HEAD`"

      # Generate tags for real this time
      - name: Bump version and push tag
        uses: mathieudutour/github-tag-action@v6.0
        id: tag_version
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          commit_sha: ${{ github.event.pull_request.head.sha }}
          
      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Release ${{ steps.tag_version.outputs.new_version }}
          body: ${{ steps.tag_version.outputs.changelog }}
          tag: ${{ steps.tag_version.outputs.new_tag }}
          generateReleaseNotes: True
